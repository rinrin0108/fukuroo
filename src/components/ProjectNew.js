import React, { Component } from 'react';
import {observer} from "mobx-react";
import firebase from 'firebase';

@observer
class ProjectNew extends Component {
  constructor() {
    super()

    this.state = {
      project: {
        title: '',
        description: '',
        image_url: '',
        owner_id: '',
      },
      isSaving: false
    }

    this.addProject = this.addProject.bind(this);
    this.updateTitle = this.updateTitle.bind(this);
    this.updateDescription = this.updateDescription.bind(this);
  }

  render() {
    return (
      <div className="ProjectNew">
        <h1>新規プロジェクト登録</h1>

        <form>
          <div className="form-group">
            <label>プロジェクト名</label>
            <input
              value={this.state.project.title}
              onChange={this.updateTitle}
              className="form-control" type="text"/>
          </div>

          <div className="form-group">
            <label>イメージ</label>
            <input
              className="form-control" type="text"/>
          </div>

          <div className="form-group">
            <label>詳細</label>
            <textarea
              value={this.state.project.description}
              onChange={this.updateDescription}
              className="form-control"></textarea>
          </div>

          <button
            className="btn btn-primary btn-block col-sm-12"
            disabled={this.state.isSaving}
            onClick={this.addProject}>
            登録
          </button>
        </form>
      </div>
    );
  }

  updateTitle(event) {
    const newProject = this.state.project;
    newProject.title = event.target.value;
    this.setState({project: newProject});
  }

  updateDescription(event) {
    const newProject = this.state.project;
    newProject.description = event.target.value;
    this.setState({project: newProject});
  }

  addProject(event) {
    event.preventDefault();
    this.setState({ isSaving: true })
    const projectRef = firebase.database().ref("projects")
    const newProjectRef = projectRef.push({
      title: this.state.project.title,
      description: this.state.project.description,
      created_at: new Date(),
    }).then(res => {
      this.setState({ isSaving: false })
      this.props.history.push('/projects')
    });
    // Get the unique ID generated by push() by accessing its key
    // const projectId = newProjectRef.key;
  }
}

export default ProjectNew;
